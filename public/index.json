[{"authors":["admin"],"categories":null,"content":"I am a 1st year Computer Science student in the Whiting School of Engineering at The Johns Hopkins University.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"I am a 1st year Computer Science student in the Whiting School of Engineering at The Johns Hopkins University.","tags":null,"title":"William Hood","type":"author"},{"authors":null,"categories":[],"content":"Test\n","date":1558051200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558051200,"objectID":"72465ee338329f602396098cc18099bb","permalink":"/post/installing-linux-fedora-and-mint/","publishdate":"2019-05-17T00:00:00Z","relpermalink":"/post/installing-linux-fedora-and-mint/","section":"post","summary":"Test","tags":["linux","mint","fedora","grub","tutorial"],"title":"Installing Linux Fedora and Mint","type":"post"},{"authors":null,"categories":[],"content":" I have created and setup a decent rough outline of my tutoring website (along with buying ritutoring.com and wlhood.com), but I want to edit the theme files to make it look better. I beleive the edits I want to make would be done through CSS, but the two go hand in hand and I’d rather just start with the foundations and learn HTML and CSS and get into good habits before I jump into the weeds more with Java and whatever else I want to get into.\nI’m rationalizing this by thinking of the value of having a professional website as a portfolio to show off my skills, and also to force myself in this self-study journey to take notes I can come back to.\nBasic HTML HTML is a tag-based language, it is built with elements. Elements have start and end tags, the end tag being identical except it starts with a forward slash. Elements can be within elements. Some tags like img or br are empty tags, there is only one (see below examples).\n !DOCTYPE Structure Text \u0026amp; Images Lists Style  !DOCTYPE The top line of the html file has this code\n\u0026lt;!DOCTYPE html\u0026gt;  Signals that the file is written in HTML5 code. The entire body of the html document is surround by the tag html.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;/html\u0026gt;   Structure The actual page is split into the head, the meta data of the page, and the body, the actual body of the page. Metadata is information about the page that isnt displayed.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Text \u0026amp; Images Within the header you can set the title, the text displayed on the browser tab. Within the body, titles and subtitles can be made with h1 through h6, largest to smallest. Regular text can be written within paragraphs, p. A line break can be inserted anywhere with br. Images in the same folder as the html document can be inserted with img. A horizontal rule (horizontal line to speerate content) can be inserted with hr.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt; Title \u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt; Biggest Header\u0026lt;/h1\u0026gt; \u0026lt;h6\u0026gt;Smallest Header\u0026lt;/6\u0026gt; \u0026lt;p\u0026gt; Regular paragraph text\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Broken \u0026lt;br\u0026gt; Paragraph\u0026lt;/P\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;img src=\u0026quot;example.png\u0026quot; alt=\u0026quot;example alt text\u0026quot; width=\u0026quot;\u0026quot; height=\u0026quot;\u0026quot;\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html Within the img tag, src signifies the image file name, alt represents the text that will show if for some reason the image cannot be displayed. Width and height set the width and height of the image.\nText within p tags cannot be formamted with spaces and line breaks without tags. Pre tags can be used to retain line breaks and extra spaces between words.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;pre\u0026gt; Line breaks and spaces maintained \u0026lt;/pre\u0026gt; \u0026lt;p\u0026gt; Line breaks and spaces NOT maintained \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Lists You can make two types of simple lists, ordered and unordered. Unordered lists are marked with bullet points, ordered lists are marked with increasing numbers. ul and ol determine unordered/ordered, and every list item is denoted with li.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; Ex List Item \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt; Ex List Item \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; ####Style Color, font, and size can be set with the style attribute. Attributes go within the start tag of an element, and effect only that element. Other attributes are img.\nStyle’s use CSS to change color, size, etc.\nlang: Attribute for html to set language title: Attribute for p to create tooltip background-color: Attribute for body to set background color\nAttribute text should be in double quotes, or single quotes if neccesary.\n\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p style=\u0026quot;color: red\u0026quot;\u0026gt; Colored Text \u0026lt;/p\u0026gt; \u0026lt;p title=\u0026quot;Tooltip when hovered\u0026quot;\u0026gt; Paragraph \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   ","date":1556668800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556668800,"objectID":"90bda832a0a2e3367e95ce3117ad70e1","permalink":"/post/learning-html-basics/","publishdate":"2019-05-01T00:00:00Z","relpermalink":"/post/learning-html-basics/","section":"post","summary":"I have created and setup a decent rough outline of my tutoring website (along with buying ritutoring.com and wlhood.com), but I want to edit the theme files to make it look better. I beleive the edits I want to make would be done through CSS, but the two go hand in hand and I’d rather just start with the foundations and learn HTML and CSS and get into good habits before I jump into the weeds more with Java and whatever else I want to get into.","tags":["html","coding","begginer","tutorial"],"title":"Learning HTML: Basics","type":"post"},{"authors":null,"categories":[],"content":" This simple personal website was made following this book: blogdown: Creating Websites with R Markdown\nI am using it as a simple, easily managed portfolio and personal website, documenting personal projects and other content.\nTechnologies Used:  Markdown (Using Typora) R (Using R Studio) Github Netlify  All posts are written in Typora, my preferred Markdown editor. Markdown is a simple markup language, that I think makes exceptionally clean and modern websites.\nThe website is generated using blogdown and hugo, as described in the mentioned book. The theme is Academic, which again I think is lightweight and stylish.\nAs the website is edited or new posts created, the files are updated in a Github repository that is then linked to Netlify and automatically updated.\nAs of writing this, my next aim is to further customize and optimize the site for my purposes, and to purchase and setup a domain name, along with launching a similar website for my planned tutoring business.\n ","date":1556236800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556236800,"objectID":"e92d5b98238de2722a241ef7f7188b66","permalink":"/post/creating-this-website/","publishdate":"2019-04-26T00:00:00Z","relpermalink":"/post/creating-this-website/","section":"post","summary":"This simple personal website was made following this book: blogdown: Creating Websites with R Markdown\nI am using it as a simple, easily managed portfolio and personal website, documenting personal projects and other content.\nTechnologies Used:  Markdown (Using Typora) R (Using R Studio) Github Netlify  All posts are written in Typora, my preferred Markdown editor. Markdown is a simple markup language, that I think makes exceptionally clean and modern websites.","tags":[],"title":"Creating This Website","type":"post"}]